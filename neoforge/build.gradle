plugins {
    id "com.github.johnrengelman.shadow" version "8.0.0"
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

def jarFileName = 'letsdo-furniture-neoforge'

archivesBaseName = jarFileName

loom {
    neoForge {
        accessWidenerPath = project(":common").loom.accessWidenerPath
        neoForge {
        }
    }
}

configurations {
    common
    shadowCommon
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common
}

dependencies {
    neoForge "net.neoforged:neoforge:${rootProject.forge_version}"
    modImplementation "me.shedaniel:RoughlyEnoughItems-neoforge:$rei_version"
    modApi "dev.architectury:architectury-neoforge:${rootProject.architectury_version}"
    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionNeoForge")) { transitive = false }
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            mod_version            : mod_version,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier.set("dev-shadow")
}

remapJar {
    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier.set(null)
    atAccessWideners.add(loom.accessWidenerPath.get().asFile.getName())
}

jar {
    archiveClassifier.set("dev")
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }
    repositories {
    }
}
